When we initiate repository, git will create a hidden folder called .git, which contains information for version control.

test a modification

如何使用暂存区确保为每项逻辑更改进行一次提交？
答： 每次做出一个逻辑更改，都将其放置在暂存区（Staging Area），即使这个逻辑更改涉及了多个文件，每改动一个文件就将其存放在暂存区，等都改动完毕，测试过之后，可以通过一次 git commit 命令提交这次逻辑更改所涉及的所有文件，作为一次提交。

在哪些情况下，分支可以帮助你有序地组织历史记录？分支将如何提供帮助？
答： 当需要实验新功能时；当需要开发另外的模式时；当需要提供额外语言或者功能的版本时。总之，如果有新的功能或版本需要进行实验性开发，就需要新建一个分支

图表如何帮助你直观显示分支结构？
答：图标显示的命令为： git diff --graph --oneline branch1 branch2
它可以检出所有从当前的分支顶点向前追溯到的分支历史节点，但是无法检出其它未被命令行提及的分支内容

将两个分支合并到一起有何结果？为什么我们在图表中表示它的方式是那样的？
答：会将两个分支中所有的更改都合并到同一个分支顶点，并且创建一个新的提交节点，自动填写了提交的说明。因为两个（或者多个)分支均合并到一起,因此图可以画成那样

Git 的自动合并与始终手动进行合并各有何优缺点？
答： Git的自动合并功能可以帮助我们来合并没有冲突的文件，它通过对比不同的文件（代码段）与原始文件（代码段）的差异，来决定是否进行合并，对那些相对于原文件分别有改动之处，在最终合并的文件中都会出现并且不会显示冲突，但是对于原文件的相同位置，不同的人有不同的改动，则Git无法判断哪个改动是正确或者合理的，所以会显示合并冲突，需要人为干预。
自动合并的优点是效率高，可以自动为我们合并无冲突的部分，并且将有冲突的部分给我们直观显示出来，它的缺点就是不能够智能的判断冲突下如何取舍，因为它都不懂代码；而完全手动的合并就需要我们自己监测每个文件的以及每个文件内代码的改变，效率非常低且容易出错。